# Python code @beducode
 

import base64, codecs
magic = 'ZnJvbSB0a2ludGVyLnRpeCBpbXBvcnQgQmFsbG9vbg0KZnJvbSBmbGFzayBpbXBvcnQgcmVxdWVzdCwgc2Vzc2lvbg0KaW1wb3J0IHJlcXVlc3RzDQppbXBvcnQganNvbg0KaW1wb3J0IHRpbWUNCmltcG9ydCBzeXMNCmltcG9ydCByYW5kb20NCmltcG9ydCBhcmdwYXJzZQ0KaW1wb3J0IGNvbG9yYW1hDQppbXBvcnQgcGF0aGxpYg0KaW1wb3J0IG1hdGgNCmltcG9ydCBnZXRwYXNzDQppbXBvcnQgc29ja2V0DQppbXBvcnQgZGF0ZXRpbWUgYXMgZHQNCmltcG9ydCBrZXlib2FyZA0KZnJvbSBjb2xvcmFtYSBpbXBvcnQgRm9yZSwgQmFjaywgU3R5bGUNCmZyb20gcmFuZG9tIGltcG9ydCByYW5kaW50LCB1bmlmb3JtDQpmcm9tIGRlY2ltYWwgaW1wb3J0IERlY2ltYWwsIGdldGNvbnRleHQNCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lLCBkYXRlLCB0aW1lZGVsdGENCmZyb20gdXJsbGliLnJlcXVlc3QgaW1wb3J0IFJlcXVlc3QsIHVybG9wZW4NCmZyb20gb3MgaW1wb3J0IHN5c3RlbSwgbmFtZQ0KZnJvbSBpbnB1dGltZW91dCBpbXBvcnQgaW5wdXRpbWVvdXQsIFRpbWVvdXRPY2N1cnJlZA0KZnJvbSBmYXVuYWRiIGltcG9ydCBxdWVyeSBhcyBxDQpmcm9tIGZhdW5hZGIub2JqZWN0cyBpbXBvcnQgUmVmDQpmcm9tIGZhdW5hZGIuY2xpZW50IGltcG9ydCBGYXVuYUNsaWVudA0KZnJvbSBzY3JhcGluZ2JlZSBpbXBvcnQgU2NyYXBpbmdCZWVDbGllbnQNCg0KY29sb3JhbWEuaW5pdChhdXRvcmVzZXQ9VHJ1ZSkNCg0KIyBTRVQgQkVUU0VUDQpwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihkZXNjcmlwdGlvbj0iV09MRi5CRVQgQk9UIEBiZWR1Y29kZSIpDQpwYXJzZXIuYWRkX2FyZ3VtZW50KA0KICAgICItYyIsICItLWJldHNldCIsIGRlZmF1bHQ9MCwgaGVscD0iRW50ZXIgWW91ciBCZXRzZXQgTnVtYmVyIChkZWZhdWx0OiAwKSINCikNCm15X25hbWVzcGFjZSA9IHBhcnNlci5wYXJzZV9hcmdzKCkNCm5vYmV0ID0gaW50KG15X25hbWVzcGFjZS5iZXRzZXQpDQoNCiMgTE9BRCBTRVRUSU5HDQp3aXRoIG9wZW4oInNldHRpbmdzLmpzb24iLCAiciIpIGFzIGZpbGVzZXR1cDoNCiAgICBkYXRhID0gZmlsZXNldHVwLnJlYWQoKQ0Kb2IgPSBqc29uLmxvYWRzKGRhdGEpDQoNCg0KIyBDT05GSUcgV0FSTkFiZXR0DQpyZXMgPSBTdHlsZS5SRVNFVF9BTEwNCnB1dGloID0gU3R5bGUuTk9STUFMICsgRm9yZS5XSElURQ0KcHV0aWgyID0gU3R5bGUuQlJJR0hUICsgRm9yZS5XSElURQ0KaGl0YW0gPSBTdHlsZS5CUklHSFQgKyBGb3JlLkJMQUNLDQpoaXRhbTIgPSBTdHlsZS5CUklHSFQgKyBGb3JlLkJMQUNLDQp1bmd1ID0gU3R5bGUuTk9STUFMICsgRm9yZS5NQUdFTlRBDQpoaWphdSA9IFN0eWxlLk5PUk1BTCArIEZvcmUuR1JFRU4NCmhpamF1MiA9IFN0eWxlLkJSSUdIVCArIEZvcmUuR1JFRU4NCm1lcmFoID0gU3R5bGUuTk9STUFMICsgRm9yZS5SRUQNCm1lcmFoMiA9IFN0eWxlLkJSSUdIVCArIEZvcmUuUkVEDQpiaXJ1ID0gU3R5bGUuTk9STUFMICsgRm9yZS5CTFVFDQpiaXJ1MiA9IFN0eWxlLkJSSUdIVCArIEZvcmUuQkxVRQ0KYmlydTMgPSBTdHlsZS5CUklHSFQgKyBGb3JlLkxJR0hUQ1lBTl9FWA0KcHJvZmNvbG9yID0gU3R5bGUuQlJJR0hUICsgQmFjay5HUkVFTiArIEZvcmUuV0hJVEUNCmxvc2Vjb2xvciA9IFN0eWxlLkJSSUdIVCArIEJhY2suUkVEICsgRm9yZS5XSElURQ0KcmNjb2xvciA9IFN0eWxlLkJSSUdIVCArIEJhY2suV0hJVEUgKyBGb3JlLkJMQUNLDQpyYmNvbG9yID0gU3R5bGUuTk9STUFMICsgQmFjay5ZRUxMT1cgKyBGb3JlLkJMQUNLDQpyY2ZvbnRjb2xvciA9IFN0eWxlLk5PUk1BTCArIEZvcmUuQkxBQ0sNCmt1bmluZyA9IFN0eWxlLk5PUk1BTCArIEZvcmUuWUVMTE9XDQprdW5pbmcyID0gU3R5bGUuQlJJR0hUICsgRm9yZS5ZRUxMT1cNCmN5YW4gPSBTdHlsZS5OT1JNQUwgKyBGb3JlLkNZQU4NCmN5YW4yID0gU3R5bGUuQlJJR0hUICsgRm9yZS5MSUdIVENZQU5fRVgNCg0KDQpjID0gcmVxdWVzdHMuU2Vzc2lvbigpDQpwcm94aWVzID0gW10NCmZyZWV2ZXJzaW9uID0gRmFsc2UNCmxpbWl0aXAgPSBGYWxzZQ0Kc3RvcG9ud2luYWN0aXZhdGVkID0gRmFsc2UNCnBhdXNlb253aW5hY3RpdmF0ZWQgPSBGYWxzZQ0KdXVpZCA9ICIiDQpzdGFydGJhbHMgPSAwDQpjbGllbnQgPSBGYXVuYUNsaWVudChzZWNyZXQ9ImZuQUVBY0FLbGlBQ0NKSDAwQmZWU0gyZFBaMEVJTVBXSGxNQ1RiRVgiKQ0KdXNlcl9hZ2VudCA9ICJNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjM7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS85Ny4wLjQ2OTIuOTkgU2FmYXJpLzUzNy4zNiINCg0KaGVhZGVyID0gew0KICAgICJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsDQogICAgInVzZXItYWdlbnQiOiAiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4zOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvOTcuMC40NjkyLjk5IFNhZmFyaS81MzcuMzYiLA0KICAgICJ4LXJlcXVlc3RlZC13aXRoIjogIlhNTEh0dHBSZXF1ZXN0IiwNCiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcNCn0NCg0KY29vayA9IHsnY2ZfY2xlYXJhbmNlJzogb2JbIkFjY291bnQiXVsiQ0YiXX0NCg0KIyBwcm94eSA9IEZyZWVQcm94eSgnREUnKS5nZXQoKQ0KDQojIHByb3hpZXMgPSB7DQojICAgImh0dHAiOiBwcm94eSwNCiMgICAiaHR0cHMiOiBwcm94eSwNCiMgfQ0KDQojIEtFWUJPQVJEIFNIT1JUQ1VUDQpzdG9wb253aW5rZXkgPSAiY3RybCt3Ig0KcGF1c2V3aW5rZXkgPSAiY3RybCtzIg0KDQoNCmRlZiBzdG9wb253aW5fdHJpZ2VyKCk6DQogICAgZ2xvYmFsIHN0b3BvbndpbmFjdGl2YXRlZA0KICAgIHN0b3BvbndpbmFjdGl2YXRlZCA9IFRydWUNCg0KDQojIEJBTk5FUg0KZGVmIGJhbm5lcigpOg0KICAgIGJhbm5lciA9ICJcblxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArIGJpcnUyICsgIuKWhOKWhOKWjCDilpAg4paE4paMICAgICAg4paE4paE4paMICDCt+KWhOKWhOKWhOKWhOKWhOKWhOKWhMK3IOKWhOKWhOKWhCAu4paE4paE4paE4paE4paEXG4iDQogICAgYmFubmVyID0gYmFubmVyICsgIuKWiOKWiMK3IOKWiOKWjOKWkOKWiOKWqiAgICAg4paI4paI4oCiICDilpDiloTiloTCt+KWkOKWiCDiloDilojilqriloDiloQu4paAwrfigKLilojiloggIFxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArICLilojilojilqrilpDilojilpDilpDilowg4paE4paI4paA4paEIOKWiOKWiOKWqiAg4paI4paI4paqIOKWkOKWiOKWgOKWgOKWiOKWhOKWkOKWgOKWgOKWquKWhCDilpDiloguIiArIGJpcnUgKyAi4paqXG4iDQogICAgYmFubmVyID0gYmFubmVyICsgIuKWkOKWiOKWjOKWiOKWiOKWkOKWiOKWjOKWkOKWiOKWjC7ilpDilozilpDilojilozilpDilozilojilojilowu4paI4paI4paE4paq4paQ4paI4paQ4paI4paE4paE4paMIOKWkOKWiOKWjMK3XG4iDQogICAgYmFubmVyID0gYmFubmVyICsgIiDiloDiloDiloDiloAg4paA4paqIOKWgOKWiOKWhOKWgOKWqi7iloDiloDiloAg4paA4paA4paAIMK34paA4paA4paA4paAICDiloDiloDiloAgIOKWgOKWgOKWgCBcbiINCiAgICBiYW5uZXIgPSBiYW5uZXIgKyAiXG4iDQoNCiAgICBiYW5uZXIgPSBiYW5uZXIgKyBwdXRpaDIgKyAiQXV0aG9yICAgICAgOiAiDQogICAgYmFubmVyID0gYmFubmVyICsgYmlydTIgKyAiZ2l0aHViQGJlZHVjb2RlXG4iDQogICAgYmFubmVyID0gYmFubmVyICsgcHV0aWgyICsgIkNvbnRhY3QgICAgIDogIg0KICAgIGJhbm5lciA9IGJhbm5lciArIGJpcnUyICsgIkBiZWR1cGxheSB8IEByaW9zdXlhbnRvIFxuIg0KICAgIGJhbm5lciA9IGJhbm5lciArIHB1dGloMiArICJWZXJzaW9uICAgICA6ICINCiAgICBiYW5uZXIgPSBiYW5uZXIgKyBiaXJ1MiArICJ2LjEuNS40XG4iICsgcmVzDQogICAgcHJpbnQoYmFubmVyKQ0KDQoNCmRlZiB0aW1lcHJvY2VzcyhzZWMpOg0KICAgIG1pbnV0ZXMsIHNlY29uZHMgPSBkaXZtb2Qoc2VjLCA2MCkNCiAgICBob3VycywgbWludXRlcyA9IGRpdm1vZChtaW51dGVzLCA2MCkNCiAgICBkYXlzLCBob3VycyA9IGRpdm1vZChob3VycywgMjQpDQogICAgc3RvcHdhdGNoeCA9IChkYXlzLCBob3VycywgbWludXRlcywgc2Vjb25kcykNCg0KICAgIHJldHVybiBzdG9wd2F0Y2h4DQoNCg0KIyBDTEVBTiBQQUdFDQpkZWYgY2xlYXIoKToNCg0KICAgICMgV0lORE9XUw0KICAgIGlmIG5hbWUgPT0gIm50IjoNCiAgICAgICAgXyA9IHN5c3RlbSgiY2xzIikNCg0KICAgICMgTUFDIC8gTElOVVgNCiAgICBlbHNlOg0KICAgICAgICBfID0gc3lzdGVtKCJjbGVhciIpDQoNCg0KIyBGT1JNQVQgREVDSU1BTCA4IERJR0lUDQoNCg0KZGVmIHJldihudW0pOg0KICAgIGlmIGxlbihudW0pIDwgODoNCiAgICAgICAgcGFuamFuZ19ub2wgPSBpbnQoOCAtIGxlbihudW0pKQ0KICAgICAgICBudW0gPSAocGFuamFuZ19ub2wgKiAiMCIpICsgc3RyKG51bSkNCiAgICAgICAgcmVzdWx0ID0gIjAuIiArIG51bQ0KICAgIGlmIGxlbihudW0pID09IDg6DQogICAgICAgIHBhbmphbmdfbm9sID0gaW50KDggLSBsZW4obnVtKSkNCiAgICAgICAgbnVtID0gKHBhbmphbmdfbm9sICogIjAiKSArIHN0cihudW0pDQogICAgICAgIHJlc3VsdCA9ICIwLiIgKyBudW0NCiAgICBlbHNlOg0KICAgICAgICBsZW5fbnVtID0gbGVuKG51bSkNCiAgICAgICAgZW5kID0gbnVtWy04Ol0NCiAgICAgICAgZmlyc3QgPSBudW1bOiBsZW5fbnVtIC0gOF0NCiAgICAgICAgcmVzdWx0ID0gZmlyc3QgKyAiLiIgKyBlbmQNCiAgICByZXR1cm4gcmVzdWx0DQoNCg0KIyBGT1JNQVQgREVDSU1BTCAxMCBESUdJVA0KZGVmIHJldndvbGYobnVtKToNCiAgICBpZiBsZW4obnVtKSA8IDEwOg0KICAgICAgICBwYW5qYW5nX25vbCA9IGludCgxMCAtIGxlbihudW0pKQ0KICAgICAgICBudW0gPSAocGFuamFuZ19ub2wgKiAiMCIpICsgc3RyKG51bSkNCiAgICAgICAgcmVzdWx0ID0gIjAuIiArIG51bQ0KICAgIGlmIGxlbihudW0pID09IDEwOg0KICAgICAgICBwYW5qYW5nX25vbCA9IGludCgxMCAtIGxlbihudW0pKQ0KICAgICAgICBudW0gPSAocGFuamFuZ19ub2wgKiAiMCIpICsgc3RyKG51bSkNCiAgICAgICAgcmVzdWx0ID0gIjAuIiArIG51bQ0KICAgIGVsc2U6DQogICAgICAgIGxlbl9udW0gPSBsZW4obnVtKQ0KICAgICAgICBlbmQgPSBudW1bLTEwOl0NCiAgICAgICAgZmlyc3QgPSBudW1bOiBsZW5fbnVtIC0gMTBdDQogICAgICAgIHJlc3VsdCA9IGZpcnN0ICsgIi4iICsgZW5kDQogICAgICAgIHRtcHJzID0gaW50KGZsb2F0KHJlc3VsdCkgKiAoMTAgKiogMTApKQ0KICAgICAgICByZXN1bHQgPSBmaXJzdCArICIuIiArIGVuZA0KICAgIHJldHVybiByZXN1bHQNCg0KDQojIEZPUk1BVCAxMSBESUdJVA0KZGVmIHJldndvbGZiZXQobnVtKToNCiAgICBpZiBsZW4obnVtKSA8IDExOg0KICAgICAgICBwYW5qYW5nX25vbCA9IGludCgxMSAtIGxlbihudW0pKQ0KICAgICAgICBudW0gPSAocGFuamFuZ19ub2wgKiAiMCIpICsgc3RyKG51bSkNCiAgICAgICAgcmVzdWx0ID0gIjAuIiArIG51bQ0KICAgIGlmIGxlbihudW0pID09IDExOg0KICAgICAgICBwYW5qYW5nX25vbCA9IGludCgxMSAtIGxlbihudW0pKQ0KICAgICAgICBudW0gPSAocGFuamFuZ19ub2wgKiAiMCIpICsgc3RyKG51bSkNCiAgICAgICAgcmVzdWx0ID0gIjAuIiArIG51bQ0KICAgIGVsc2U6DQogICAgICAgIGxlbl9udW0gPSBsZW4obnVtKQ0KICAgICAgICBlbmQgPSBudW1bLTExOl0NCiAgICAgICAgZmlyc3QgPSBudW1bOiBsZW5fbnVtIC0gMTFdDQogICAgICAgIHJlc3VsdCA9IGZpcnN0ICsgIi4iICsgZW5kDQogICAgICAgIHRtcHJzID0gaW50KGZsb2F0KHJlc3VsdCkgKiAoMTAgKiogMTEpKQ0KICAgICAgICByZXN1bHQgPSBmaXJzdCArICIuIiArIGVuZA0KICAgIHJldHVybiByZXN1bHQNCg0KDQojIFJFRlJFU0ggUEFHRQ0KZGVmIHJlZnJlc2hfcGFnZSgpOg0KICAgIGNsZWFyKCkNCiAgICBiYW5uZXIoKQ0KDQojIEFQSSBJTkRPREFYIEZPUiBHRVQgTEFTVCBQUklDRQ0KZGVmIGluZG9kYXgoY29pbik6DQogICAgdHJ5Og0KICAgICAgICBwYWlyID0gKGNvaW4pLmxvd2VyKCkgKyAiX2lkciINCg0KICAgICAgICB1cmwgPSAiaHR0cHM6Ly9pbmRvZGF4LmNvbS9hcGkvIiArIHN0cihwYWlyKSArICIvdGlja2VyIg0KDQogICAgICAgIGluZHggPSBjLmdldCh1cmwpDQogICAgICAgIGpzaW5keCA9IGpzb24ubG9hZHMoaW5keC50ZXh0KQ0KICAgICAgICBwcmljZXBhaXIgPSBpbnQoanNpbmR4WyJ0aWNrZXIiXVsibGFzdCJdKQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgY29pbnBhaXIgPSAoY29pbikubG93ZXIoKSArICJfaWRyIg0KDQogICAgICAgIHVybCA9ICJodHRwczovL2JlZHVjb2RlLXByaWNlLmhlcm9rdWFwcC5jb20vcHJpY2UvIiArIHN0cihjb2lucGFpcikNCg0KICAgICAgICBwcmljZSA9IGMuZ2V0KHVybCkNCiAgICAgICAgZGF0YSA9IGpzb24ubG9hZHMocHJpY2UudGV4dCkNCiAgICAgICAgcHJpY2VwYWlyID0gZGF0YVsibGFzdCJdDQoNCiAgICByZXR1cm4gcHJpY2VwYWlyDQoNCg0KIyBGT1JNQVQgVkFMVUUgVE8gSURSDQoNCg0KZGVmIHJ1cGlhaF9mb3JtYXQoYW5na2EpOg0KICAgIHJldHVybiAiUnAgIiArICJ7OjAsLjJmfSIuZm9ybWF0KGFuZ2thKQ0KDQoNCiMgRk9STUFUIFZBTFVFIFRPIFVTRA0KDQoNCmRlZiBkb2xsYXJfZm9ybWF0KGFuZ2thKToNCiAgICByZXR1cm4gIiQgIiArICJ7OjAsLjJmfSIuZm9ybWF0KGFuZ2thKQ0KDQoNCiMgTElTVCBFTkQgUE9JTlQNCg0KDQpkZWYgbmF2aWdhdGVfYXBpKG5hdik6DQogICAgaWYgbmF2ID09ICJzdGFydCI6DQogICAgICAgIGVuZHBvaW50ID0gImh0dHBzOi8vd29sZi5iZXQvYXBpL3YxL3VzZXIvYmFsYW5jZXMiDQogICAgZWxpZiBuYXYgPT0gImJldCI6DQogICAgICAgIGVuZHBvaW50ID0gImh0dHBzOi8vd29sZi5iZXQvYXBpL3YxL2RpY2UvbWFudWFsL3BsYXkiDQogICAgZWxpZiBuYXYgPT0gImxpbWJvIjoNCiAgICAgICAgZW5kcG9pbnQgPSAiaHR0cHM6Ly93b2xmLmJldC9hcGkvdjIvbGltYm8vbWFudWFsL3BsYXkiDQogICAgZWxzZToNCiAgICAgICAgZW5kcG9pbnQgPSAiaHR0cHM6Ly93b2xmLmJldC9hcGkvdjEvZ2FtZS9zZWVkL3JlZnJlc2giDQoNCiAgICByZXR1cm4gZW5kcG9pbnQNCg0KDQpkZWYgY2FsbF9hcGkobWV0aG9kLCB1cmwsIGhkLCBrZXksIGR0LCBwcm94KToNCiAgICByZXN1bHQgPSBOb25lDQogICAgd2hpbGUgcmVzdWx0IGlzIE5vbmU6DQogICAgICAgIGlmIG1ldGhvZCA9PSAiR0VUIjoNCiAgICAgICAgICAgIHRyeToNCiAgICAgICAgICAgICAgICAjIGNvbm5lY3QNCiAgICAgICAgICAgICAgICByZXN1bHQgPSBjLmdldCh1cmwsIGhlYWRlcnM9aGQsIGF1dGg9a2V5LCBkYXRhPWR0LCBwcm94aWVzPXByb3gpDQogICAgICAgICAgICAgICAgaWYgcmVzdWx0LnN0YXR1c19jb2RlICE9IDIwMDoNCiAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBOb25lDQogICAgICAgICAgICAgICAgICAgIGNhbGxfYXBpKG1ldGhvZCwgdXJsLCBoZCwgZHQsIHByb3gpDQogICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICMgY29ubmVjdA0KICAgICAgICAgICAgICAgIHJlc3VsdCA9IGMucG9zdCh1cmwsIGhlYWRlcnM9aGQsIGF1dGg9a2V5LCBkYXRhPWR0LCBwcm94aWVzPXByb3gpDQogICAgICAgICAgICAgICAgaWYgcmVzdWx0LnN0YXR1c19jb2RlICE9IDIwMDoNCiAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBOb25lDQogICAgICAgICAgICAgICAgICAgIGNhbGxfYXBpKG1ldGhvZCwgdXJsLCBoZCwgZHQsIHByb3gpDQogICAgICAgICAgICBleGNlcHQ6DQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgyKQ0KDQogICAgcmV0dXJuIGpzb24ubG9hZHMocmVzdWx0LnRleHQpDQoNCg0KIyBWQUxJREFURSBSVU5OSU5HIFNDUklQVA0KIyMgRk9SIERFVg0KZGVmIHJlbWFpbmxvc2VpbmZvKHJlbWFpbmxvc2UpOg0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgcHJpbnQocHV0aWgyICsgIlJlbWFpbiBSZXBvcnQhISEgIiArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiUmVtYWluIExvc2UgOiAiICsgcmVzICsgbWVyYWgyICsgcmV2KHN0cihyZW1haW5sb3NlKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNlbGFsdSBCZXJoYXRpLWhhdGkgJiBTaWxhaGthbiBKYWxhbmthbiBLZW1iYWxpIFNjcmlwdCIgKyByZXMpDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIHN5cy5leGl0KCkNCg0KDQojIFRBUkdFVCBMT1NTDQpkZWYgc2F2ZXByb2ZpdChwZiwgYmwsIG1iLCBscywgdHApOg0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgcHJpbnQocHV0aWgyICsgIlNhdmluZyBwcm9maXQgVGVsYWggVGVyY2FwYWkhISAiICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJUb3RhbCBQcm9maXQgOiAiICsgcmVzICsgaGlqYXUyICsgcmV2KHN0cihwZikpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJNYXggQmV0IFRlcmFraGlyIDogIiArIHJlcyArIG1lcmFoMiArIHJldndvbGZiZXQoc3RyKG1iKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlRvdGFsIExvc2UgU3RyaWtlIDogIiArIHJlcyArIG1lcmFoMiArIHN0cihscykgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNhbGRvIEFuZGEgU2FhdCBJbmkgOiAiICsgcmVzICsgaGlqYXUyICsgcmV2d29sZihzdHIoYmwpKSArIHJlc3MpDQogICAgcHJpbnQocHV0aWgyICsgIldha3R1IFByb2Nlc3MgOiAiICsgcmVzICsgcHV0aWggKyB0cCArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiU2VsYWx1IEJlcmhhdGktaGF0aSAmIFNpbGFoa2FuIEphbGFua2FuIEtlbWJhbGkgU2NyaXB0IiArIHJlcykNCiAgICB0aW1lLnNsZWVwKDEpDQogICAgc3lzLmV4aXQoKQ0KDQoNCiMgVEFSR0VUIEJFVA0KZGVmIGN1dGxvc3MoYmwsIHNiLCBscywgdHApOg0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgY3QgPSBzYiAtIGJsDQogICAgcHJpbnQocHV0aWgyICsgIlRhcmdldCBCZXQgVGVsYWggVGVyY2FwYWkhISAiICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJMb3NzIDogIiArIHJlcyArIG1lcmFoMiArIHJldihzdHIoY3QpKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiVG90YWwgTG9zZSBTdHJpa2UgOiAiICsgcmVzICsgbWVyYWgyICsgc3RyKGxzKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiU2FsZG8gQW5kYSBTYWF0IEluaSA6ICIgKyByZXMgKyBoaWphdTIgKyByZXZ3b2xmKHN0cihibCkpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJXYWt0dSBQcm9jZXNzIDogIiArIHJlcyArIHB1dGloICsgdHAgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNlbGFsdSBCZXJoYXRpLWhhdGkgJiBTaWxhaGthbiBKYWxhbmthbiBLZW1iYWxpIFNjcmlwdCIgKyByZXMpDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIHN5cy5leGl0KCkNCg0KDQojIFRBUkdFVCBMT1NTDQpkZWYgdGFyZ2V0bG9zcyhibCwgc2IsIG1iLCBscywgdHApOg0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgdGwgPSBibCAtIHNiDQogICAgcHJpbnQocHV0aWgyICsgIlRhcmdldCBMb3NzIFRlbGFoIFRlcmNhcGFpISEgIiArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiVG90YWwgTG9zZSA6ICIgKyByZXMgKyBtZXJhaDIgKyByZXYoc3RyKHRsKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIk1heCBCZXQgVGVyYWtoaXIgOiAiICsgcmVzICsgbWVyYWgyICsgcmV2d29sZmJldChzdHIobWIpKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiVG90YWwgTG9zZSBTdHJpa2UgOiAiICsgcmVzICsgbWVyYWgyICsgc3RyKGxzKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiU2FsZG8gQW5kYSBTYWF0IEluaSA6ICIgKyByZXMgKyBoaWphdTIgKyByZXZ3b2xmKHN0cihibCkpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJXYWt0dSBQcm9jZXNzIDogIiArIHJlcyArIHB1dGloICsgdHAgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNlbGFsdSBCZXJoYXRpLWhhdGkgJiBTaWxhaGthbiBKYWxhbmthbiBLZW1iYWxpIFNjcmlwdCIgKyByZXMpDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIHN5cy5leGl0KCkNCg0KDQojIFRBUkdFVCBQUk9GSVQNCmRlZiB0YXJnZXRwcm9maXQocGYsIGJsLCBtYiwgbHMsIHRwKToNCiAgICByZWZyZXNoX3BhZ2UoKQ0KDQogICAgcHJpbnQocHV0aWgyICsgIlRhcmdldCBQcm9maXQgVGVsYWggVGVyY2FwYWkgOiAiICsgcmVzICsgaGlqYXUyICsgcmV2KHN0cihwZikpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJNYXggQmV0IFRlcmFraGlyIDogIiArIHJlcyArIG1lcmFoMiArIHJldndvbGZiZXQoc3RyKG1iKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlRvdGFsIExvc2UgU3RyaWtlIDogIiArIHJlcyArIG1lcmFoMiArIHN0cihscykgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNhbGRvIEFuZGEgU2FhdCBJbmkgOiAiICsgcmVzICsgaGlqYXUyICsgcmV2d29sZihzdHIoYmwpKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiV2FrdHUgUHJvY2VzcyA6ICIgKyByZXMgKyBwdXRpaCArIHRwICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJTZWxhbHUgQmVyaGF0aS1oYXRpICYgU2lsYWhrYW4gSmFsYW5rYW4gS2VtYmFsaSBTY3JpcHQiICsgcmVzKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBzeXMuZXhpdCgpDQoNCg0KIyBUQVJHRVQgQkFMQU5DRQ0KZGVmIHRhcmdldGJhbGFuY2UocGYsIGJsLCBtYiwgbHMsIHRwKToNCiAgICBjbGVhcigpDQogICAgYmFubmVyKCkNCiAgICBwcmludChwdXRpaDIgKyAiVGFyZ2V0IEJhbGFuY2UgVGVsYWggVGVyY2FwYWkgOiAiICsgcmVzICsgaGlqYXUyICsgcmV2KHN0cihwZikpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJNYXggQmV0IFRlcmFraGlyIDogIiArIHJlcyArIG1lcmFoMiArIHJldndvbGZiZXQoc3RyKG1iKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlRvdGFsIExvc2UgU3RyaWtlIDogIiArIHJlcyArIG1lcmFoMiArIHN0cihscykgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNhbGRvIEFuZGEgU2FhdCBJbmkgOiAiICsgcmVzICsgaGlqYXUyICsgcmV2d29sZihzdHIoYmwpKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiV2FrdHUgUHJvY2VzcyA6ICIgKyByZXMgKyBwdXRpaCArIHRwICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJTZWxhbHUgQmVyaGF0aS1oYXRpICYgU2lsYWhrYW4gSmFsYW5rYW4gS2VtYmFsaSBTY3JpcHQiICsgcmVzKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBzeXMuZXhpdCgpDQoNCg0KIyBTVE9QIE9OIFdJTg0KZGVmIHN0b3BvbndpbihwZiwgYmwsIG1iLCBscywgdHApOg0KICAgIHJlZnJlc2hfcGFnZSgpDQoNCiAgICBwcmludChwdXRpaDIgKyAiU3RvcCBvbiB3aW4gYWt0aWYsIFByb2ZpdCBBbmRhIDogIiArIHJlcyArIGhpamF1MiArIHJldihzdHIocGYpKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiTWF4IEJldCBUZXJha2hpciA6ICIgKyByZXMgKyBtZXJhaDIgKyByZXZ3b2xmYmV0KHN0cihtYikpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJUb3RhbCBMb3NlIFN0cmlrZSA6ICIgKyByZXMgKyBtZXJhaDIgKyBzdHIobHMpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJTYWxkbyBBbmRhIFNhYXQgSW5pIDogIiArIHJlcyArIGhpamF1MiArIHJldndvbGYoc3RyKGJsKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIldha3R1IFByb2Nlc3MgOiAiICsgcmVzICsgcHV0aWggKyB0cCArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiU2VsYWx1IEJlcmhhdGktaGF0aSAmIFNpbGFoa2FuIEphbGFua2FuIEtlbWJhbGkgU2NyaXB0IiArIHJlcykNCiAgICB0aW1lLnNsZWVwKDEpDQogICAgc3lzLmV4aXQoKQ0KICAgIA0KIyBTVE9QIE9OIFdJTg0KZGVmIG1heGxzKHBmLCBibCwgbWIsIGxzLCB0cCk6DQogICAgcmVmcmVzaF9wYWdlKCkNCg0KICAgIHByaW50KHB1dGloMiArICJNYXhpbXVtIExvc2UgU3RyaWtlIGFrdGlmLCBQcm9maXQgQW5kYSA6ICIgKyByZXMgKyBoaWphdTIgKyByZXYoc3RyKHBmKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIk1heCBCZXQgVGVyYWtoaXIgOiAiICsgcmVzICsgbWVyYWgyICsgcmV2d29sZmJldChzdHIobWIpKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiVG90YWwgTG9zZSBTdHJpa2UgOiAiICsgcmVzICsgbWVyYWgyICsgc3RyKGxzKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiU2FsZG8gQW5kYSBTYWF0IEluaSA6ICIgKyByZXMgKyBoaWphdTIgKyByZXZ3b2xmKHN0cihibCkpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJXYWt0dSBQcm9jZXNzIDogIiArIHJlcyArIHB1dGloICsgdHAgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNlbGFsdSBCZXJoYXRpLWhhdGkgJiBTaWxhaGthbiBKYWxhbmthbiBLZW1iYWxpIFNjcmlwdCIgKyByZXMpDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIHN5cy5leGl0KCkNCg0KIyBNQVhJTVVNIExFVkVMDQpkZWYgbWF4bGV2ZWwocGYsIGJsLCBtYiwgbHMsIHRwKToNCiAgICByZWZyZXNoX3BhZ2UoKQ0KDQogICAgcHJpbnQocHV0aWgyICsgIk1heGltdW0gTGV2ZWwgUmVzaWtvIGFrdGlmLCBQcm9maXQgQW5kYSA6ICIgKyByZXMgKyBoaWphdTIgKyByZXYoc3RyKHBmKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIk1heCBCZXQgVGVyYWtoaXIgOiAiICsgcmVzICsgbWVyYWgyICsgcmV2d29sZmJldChzdHIobWIpKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiVG90YWwgTG9zZSBTdHJpa2UgOiAiICsgcmVzICsgbWVyYWgyICsgc3RyKGxzKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiU2FsZG8gQW5kYSBTYWF0IEluaSA6ICIgKyByZXMgKyBoaWphdTIgKyByZXZ3b2xmKHN0cihibCkpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJXYWt0dSBQcm9jZXNzIDogIiArIHJlcyArIHB1dGloICsgdHAgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNlbGFsdSBCZXJoYXRpLWhhdGkgJiBTaWxhaGthbiBKYWxhbmthbiBLZW1iYWxpIFNjcmlwdCIgKyByZXMpDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIHN5cy5leGl0KCkNCg0KDQojIyBGSUJPTkFDQ0hJIENBTEMNCmRlZiBmaWJvY2FsKG4pOg0KICAgIGlmIG4gPD0gMToNCiAgICAgICAgcmV0dXJuIG4gKyAxDQogICAgZWxzZToNCiAgICAgICAgcmV0dXJuIGZpYm9jYWwobiAtIDEpICsgZmlib2NhbChuIC0gMikNCg0KDQojIyBVSSBSQU5HRSBDSEFOQ0UNCmRlZiByYW5nZUNoYW5jZShoYyk6DQogICAgcGFuamFuZ3JkID0gbGVuKHN0cihoYykpDQogICAgaWYgcGFuamFuZ3JkID09IDM6DQogICAgICAgIGNoYW5jZXJhbmQgPSAiICIgKyBzdHIoaGMpICsgIiAgICINCiAgICBpZiBwYW5qYW5ncmQgPT0gNDoNCiAgICAgICAgY2hhbmNlcmFuZCA9ICIgIiArIHN0cihoYykgKyAiICAiDQogICAgaWYgcGFuamFuZ3JkID09IDU6DQogICAgICAgIGNoYW5jZXJhbmQgPSAiICIgKyBzdHIoaGMpICsgIiAiDQoNCiAgICByZXR1cm4gY2hhbmNlcmFuZA0KDQoNCiMjIFJBTkRPTSBDSEFOQ0UNCmRlZiByYW5kb21DaGFuY2UobWluLCBtYXgpOg0KICAgIGhhc2lsX2NoYW5jZSA9IHJvdW5kKHJhbmRvbS51bmlmb3JtKGZsb2F0KG1pbiksIGZsb2F0KG1heCkpLCAyKQ0KDQogICAgcmV0dXJuIGhhc2lsX2NoYW5jZQ0KDQoNCiMjIFNFVFRJTkcgQ0hBTkNFDQpkZWYgc2V0dGluZ0NoYW5jZShMQ01pbiwgTENNYXgpOg0KICAgIGlmICgNCiAgICAgICAgb2JbIkJldHNldCJdW25vYmV0XVsiUmFuZG9tIENoYW5jZSJdWyJUb2dnbGUiXSA9PSAiT04iDQogICAgICAgIG9yIG9iWyJCZXRzZXQiXVtub2JldF1bIlJhbmRvbSBDaGFuY2UiXVsiVG9nZ2xlIl0gPT0gIk9uIg0KICAgICAgICBvciBvYlsiQmV0c2V0Il1bbm9iZXRdWyJSYW5kb20gQ2hhbmNlIl1bIlRvZ2dsZSJdID09ICJvbiINCiAgICApOg0KDQogICAgICAgIGNoYW5jZXZhbCA9IHJhbmRvbUNoYW5jZShMQ01pbiwgTENNYXgpDQogICAgICAgIGNoYW5jZXJhbmQgPSByYW5nZUNoYW5jZShjaGFuY2V2YWwpDQoNCiAgICBlbHNlOg0KICAgICAgICBjaGFuY2V2YWwgPSBmbG9hdChMQ01pbikNCg0KICAgICAgICBjaGFuY2VyYW5kID0gcmFuZ2VDaGFuY2UoY2hhbmNldmFsKQ0KDQogICAgcmV0dXJuIGNoYW5jZXZhbCwgY2hhbmNlcmFuZA0KDQojIyBDSEVDSyBMT0dJTg0KZGVmIGNoZWNrbG9naW4oc3RhdHVzKToNCiAgICBpZiBzdGF0dXMgaXMgVHJ1ZToNCiAgICAgICAgcmVmcmVzaF9wYWdlKCkNCg0KICAgICAgICBwcmludChtZXJhaDIgKyAiUGVyaWtzYSBLZW1iYWxpIEFQSSBrZXkgQW5kYSBQYWRhIEZpbGUgc2V0dGluZ3MuanNvbiIgKyByZXMpDQogICAgICAgIHN5cy5leGl0KCkNCiAgICBlbHNlOg0KICAgICAgICBwYXNzDQoNCiMjIFZBTElEQVRFIEJFVA0KZGVmIHZhbGlkYXRlYmV0KGJiLCBjY3kpOg0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgDQogICAgcHJpbnQocHV0aWgyICsgIkJhc2UgYmV0IGhhcnVzIGxlYmloIGJlc2FyIGRhcmkgIiArIHJlcyArIGhpamF1ICsgcmV2KHN0cihiYikpICsgcmVzICsgIiAiICsgcHV0aWgyICsgc3RyKGNjeS51cHBlcigpKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJTZWxhbHUgQmVyaGF0aS1oYXRpICYgU2lsYWhrYW4gSmFsYW5rYW4gS2VtYmFsaSBTY3JpcHQiICsgcmVzKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBzeXMuZXhpdCgpICAgDQogICAgDQojIyBWQUxJREFURSBCRVQNCmRlZiB2YWxpZGF0ZWJhbGFuY2UoYmIsIGNjeSk6DQogICAgcmVmcmVzaF9wYWdlKCkNCiAgICANCiAgICBwcmludChwdXRpaDIgKyAiQmFsYW5jZSBhbmRhIGt1cmFuZyBkYXJpIG1pbmltYWwgYmV0ICIgKyByZXMgKyBoaWphdSArIHJldihzdHIoYmIpKSArIHJlcyArICIgIiArIHB1dGloMiArIHN0cihjY3kudXBwZXIoKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWggKyAiU2VsYWx1IEJlcmhhdGktaGF0aSAmIFNpbGFoa2FuIEphbGFua2FuIEtlbWJhbGkgU2NyaXB0IiArIHJlcykNCiAgICB0aW1lLnNsZWVwKDEpDQogICAgc3lzLmV4aXQoKSAgICANCiAgICANCiMjIE1JTklNQUwgQkFMQU5DRQ0KZGVmIHZhbGlkYXRlbWluYmFsYW5jZShtaW5iYWxhbmNlLCBjY3kpOg0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgDQogICAgcHJpbnQocHV0aWgyICsgIkJhbGFuY2UgYW5kYSBoYXJ1cyBsZWJpaCBkYXJpICIgKyByZXMgKyBoaWphdSArIHJldm1pbmJhbChzdHIobWluYmFsYW5jZSkpICsgcmVzICsgIiAiICsgcHV0aWgyICsgc3RyKGNjeS51cHBlcigpKSArIHJlcykNCiAgICBwcmludChwdXRpaCArICJTZWxhbHUgQmVyaGF0aS1oYXRpICYgU2lsYWhrYW4gSmFsYW5rYW4gS2VtYmFsaSBTY3JpcHQiICsgcmVzKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBzeXMuZXhpdCgpICAgIA0KICAgIA0KIyMgSU5GTFVFTkNFIEJBTEFOQ0UNCmRlZiBiYWxhbmNldGlkYWtjdWt1cChibCwgbWIsIGxzLCB0cCk6DQogICAgcmVmcmVzaF9wYWdlKCkNCiAgICBwcmludChwdXRpaDIgKyAiQmFsYW5jZSBBbmRhIFRpZGFrIEN1a3VwIFVudHVrIE1lbGFuanV0a2FuIEJldCEhICIgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNpc2EgQmFsYW5jZSBBbmRhICIgKyByZXMgKyBoaWphdSArIHJldndvbGYoc3RyKGJsKSkgKyByZXMgKyAiICIgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIk1heCBCZXQgVGVyYWtoaXIgOiAiICsgcmVzICsgbWVyYWgyICsgcmV2d29sZmJldChzdHIobWIpKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiVG90YWwgTG9zZSBTdHJpa2UgOiAiICsgcmVzICsgbWVyYWgyICsgc3RyKGxzKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiU2FsZG8gQW5kYSBTYWF0IEluaSA6ICIgKyByZXMgKyBoaWphdTIgKyByZXZ3b2xmKHN0cihibCkpICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJXYWt0dSBQcm9jZXNzIDogIiArIHJlcyArIHB1dGloICsgdHAgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIlNlbGFsdSBCZXJoYXRpLWhhdGkgJiBTaWxhaGthbiBKYWxhbmthbiBLZW1iYWxpIFNjcmlwdCIgKyByZXMpDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIHN5cy5leGl0KCkgIA0KICAgIA0KZGVmIGJhbGFuY2VjYWxkZW1vKGJsLCBtYiwgbHMsIHRwLCBzYik6IA0KICAgIHJlZnJlc2hfcGFnZSgpDQogICAgcHJpbnQocHV0aWgyICsgIkhhc2lsIEthbGt1bGFzaSBCYWxhbmNlIERlbW8hISAiICsgcmVzKQ0KICAgIHByaW50KHB1dGloMiArICJCYWxhbmNlIFlhbmcgQW5kYSBHdW5ha2FuICIgKyByZXMgKyBoaWphdSArIHJldndvbGYoc3RyKGJsKSkgKyByZXMgKyAiICIgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIk1heCBCZXQgVGVyYWtoaXIgOiAiICsgcmVzICsgbWVyYWgyICsgcmV2d29sZmJldChzdHIobWIpKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiVG90YWwgTG9zZSBTdHJpa2UgOiAiICsgcmVzICsgbWVyYWgyICsgc3RyKGxzKSArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiU2FsZG8gQW5kYSBTYWF0IEluaSA6ICIgKyByZXMgKyBoaWphdTIgKyByZXYoc3RyKHNiKSkgKyByZXMpDQogICAgcHJpbnQocHV0aWgyICsgIldha3R1IFByb2Nlc3MgOiAiICsgcmVzICsgcHV0aWggKyB0cCArIHJlcykNCiAgICBwcmludChwdXRpaDIgKyAiU2VsYWx1IEJlcmhhdGktaGF0aSAmIFNpbGFoa2FuIEphbGFua2FuIEtlbWJhbGkgU2NyaXB0IiArIHJlcykNCiAgICB0aW1lLnNsZWVwKDEpDQogICAgc3lzLmV4aXQoKSAgDQogICAgICAgICAgICANCg0KIyBSRUdJU1RFUiBUSU1FDQpkZWYgZGF0ZXJlZ2lzdGVyKCk6DQogICAgbm93ID0gZGF0ZXRpbWUubm93KCkNCg0KICAgIHllYXIgPSBub3cuc3RyZnRpbWUoIiVZIikNCiAgICBtb250aCA9IG5vdy5zdHJmdGltZSgiJW0iKQ0KICAgIGRheSA9IG5vdy5zdHJmdGltZSgiJWQiKQ0KICAgIHRpbWUgPSBub3cuc3RyZnRpbWUoIiVIOiVNOiVTIikNCg0KICAgIGRhdGVfcmVnaXN0ZXIgPSBub3cuc3RyZnRpbWUoIiVkLyVtLyV5ICVIOiVNOiVTIikNCg0KICAgIHJldHVybiBkYXRlX3JlZ2lzdGVyDQoNCiMgUkVHSVNURVIgVElNRQ0KZGVmIGRhdGVub3coKToNCiAgICBub3cgPSBkYXRldGltZS5ub3coKQ0KDQogICAgeWVhciA9IG5vdy5zdHJmdGltZSgiJVkiKQ0KICAgIG1vbnRoID0gbm93LnN0cmZ0aW1lKCIlbSIpDQogICAgZGF5ID0gbm93LnN0cmZ0aW1lKCIlZCIpDQoNCiAgICBkYXRlX3JlZ2lzdGVyID0gbm93LnN0cmZ0aW1lKCIlWS0lbS0lZCIpDQoNCiAgICByZXR1cm4gZGF0ZV9yZWdpc3Rlcg0KDQojIyBDQUxDVUxBVEVEIFBBWSBMT1NFIE1PREUgMQ0KZGVmIHBheWxvc2VjYWxjTW9kZTEoY2gsIHRsb3NlLCB0bXBsb3NlLCBiYXNlYmV0LCBtaW5iZXQpOg0KICAgIHBheW91dCA9IDk1IC8gZmxvYXQoY2gpDQogICAgbnBmYiA9IGludChmbG9hdChwYXlvdXQpKSAtIDENCiAgICBpZiBucGZiID4gdGxvc2U6DQogICAgICAgIHJldHVybiBtaW5iZXQNCiAgICBlbHNlOg0KICAgICAgICBwYXliYWNrID0gaW50KHRtcGxvc2UgLyBpbnQoZmxvYXQocGF5b3V0KSkpDQogICAgICAgIGRpdmJhc2UgPSBpbnQoYmFzZWJldCAvIGludChmbG9hdChwYXlvdXQpKSkNCiAgICAgICAgY2FsbHBheW91dCA9IGRpdmJhc2UgKyBwYXliYWNrDQoNCiAgICAgICAgaWYgY2FsbHBheW91dCA8IG1pbmJldDoNCiAgICAgICAgICAgIGRpdmJhc2UgPSBtaW5iZXQgLSBwYXliYWNrDQogICAgICAgICAgICBjYWxscGF5b3V0ID0gZGl2YmFzZSArIHBheWJhY2sNCiAgICAgICAgICAgIHJldHVybiBjYWxscGF5b3V0DQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBjYWxscGF5b3V0ID0gZGl2YmFzZSArIHBheWJhY2sNCiAgICAgICAgICAgIHJldHVybiBjYWxscGF5b3V0DQogICAgICAgIA0KZGVmIHBheWxvc2VjYWxjTW9kZTUoY2gsIHRsb3NlLCB0bXBsb3NlLCBiYXNlYmV0LCBtaW5iZXQpOg0KICAgIHBheW91dCA9IDk1IC8gZmxvYXQoY2gpDQogICAgcGF5YmFjayA9IGludCh0bXBsb3NlIC8gaW50KGZsb2F0KHBheW91dCkpKQ0KICAgIGRpdmJhc2UgPSBpbnQoYmFzZWJldCAvIGludChmbG9hdChwYXlvdXQpKSkNCg0KICAgIGNhbGxwYXlvdXQgPSBkaXZiYXNlICsgcGF5YmFjaw0KICAgIHJldHVybiBjYWxscGF5b3V0DQoNCg0KIyBDT1JFIERJQ0UgUFJPQ0VTUw0KZGVmIGV4cGlyZWRjaGVjaygpOg0KICAgIGZpbGUgPSBwYXRobGliLlBhdGgoInBhc3Njb2RlLnR4dCIpDQogICAgcGFz'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))